import{_ as t,c as a,o as e,O as o}from"./chunks/framework.389d77d5.js";const s="/university-hangman/assets/01-qt-creator-plugin.3a8bbd2f.png",r="/university-hangman/assets/02-qt-creator-plugin-beautifier.d1a8c5ca.png",i="/university-hangman/assets/03-qt-creator-plugin-settings.264ebb9b.png",n="/university-hangman/assets/04-qt-creator-plugin-active-settings.c114e2e0.png",p="/university-hangman/assets/05-qt-creator-plugin-more-settings.2db32240.png",C=JSON.parse('{"title":"Стиль коду","description":"","frontmatter":{},"headers":[],"relativePath":"guide/installation/code-style.md"}'),l={name:"guide/installation/code-style.md"},c=o('<h1 id="стиль-коду" tabindex="-1">Стиль коду <a class="header-anchor" href="#стиль-коду" aria-label="Permalink to &quot;Стиль коду&quot;">​</a></h1><p>Дотримання єдиного стилю коду в програмуванні має кілька переваг. Він підвищує читабельність і розуміння коду, зменшує кількість помилок, спричинених невідповідностями в стилі написання, і спрощує супровід та оновлення коду в майбутньому. Тому, для ефективної роботи над проєктом, важливо дотримуватися загальних правил оформлення коду.</p><p>Для цього ми налаштуємо Qt Creator, який буде автоматично, при збереженні файлу, форматувати його.</p><h2 id="увімкнення-плагіна" tabindex="-1">Увімкнення плагіна <a class="header-anchor" href="#увімкнення-плагіна" aria-label="Permalink to &quot;Увімкнення плагіна&quot;">​</a></h2><p>Для того, щоб активувати автоформатування, необхідно увімкнути плагін. При виборі &quot;Help -&gt; About plugins&quot; відкривається вікно плагінів Qt Creator.</p><p><img src="'+s+'" alt=""></p><p>Після відкриття вікна, необхідно поставити галочку навпроти плагіна &quot;Beautifier&quot; і перезавантажити Qt Creator.</p><p><img src="'+r+'" alt=""></p><h2 id="налаштування-плагіна" tabindex="-1">Налаштування плагіна <a class="header-anchor" href="#налаштування-плагіна" aria-label="Permalink to &quot;Налаштування плагіна&quot;">​</a></h2><p>За замовчуванням, автоформатування не ввімкнено. Для того, щоб його ввімкнути, потрібно перейти в &quot;Edit -&gt; Preferences&quot;, і у вікні, що з&#39;явилося, вибрати &quot;Beautifier&quot;.</p><p><img src="'+i+'" alt=""></p><p>Тепер необхідно виставити галочку на &quot;Enable auto format on file save&quot;, виставити &quot;ClangFormat&quot; у селекторі &quot;Tool&quot;.</p><p><img src="'+n+'" alt=""></p><p>У вкладці &quot;ClangFormat&quot; потрібно вибрати шлях до виконуваного файлу clang-format.exe, який поставляється в MS Visual Studio C++.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\Llvm\\x64\\bin\\clang-format.exe</span></span></code></pre></div><p>У полі &quot;Use predefined style&quot; вибрати &quot;File&quot;.</p><p><img src="'+p+'" alt=""></p><p>Після цього необхідно перевідкрити Qt Creator.</p><h2 id="результат" tabindex="-1">Результат <a class="header-anchor" href="#результат" aria-label="Permalink to &quot;Результат&quot;">​</a></h2><p>Тепер, при збереженні будь-якого файлу з розширенням .cpp або .h, Qt Creator автоматично форматне код як прописано в конфігураційному файлі.</p>',20),u=[c];function d(m,g,_,h,q,f){return e(),a("div",null,u)}const y=t(l,[["render",d]]);export{C as __pageData,y as default};
